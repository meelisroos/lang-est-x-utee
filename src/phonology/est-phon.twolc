! Copyright © 2016 Heiki-Jaan Kaalep

Alphabet

a b c d e f g h i j k l m n o p q r s š z ž t u v w õ ä ö ü x y 
A B C D E F G H I J K L M N O P Q R S Š Z Ž T U V W Õ Ä Ö Ü X Y 

 %{W%}:0 ! The weak grade trigger never appears on the surface side.
 %{WL%}:0 ! The weak grade trigger that triggers only lexically determined weak grade forms,
          ! so that it does not trigger Fiadi as the weak grade form of Fiat.
 %{S%}:0  ! Strong stem trigger (for short illatives only) never appears on the surface side.
          ! (necessary for words with no stem gradation, having only short illative in a strong grade, e.g. Riia - Riiga, Rannu - Randu)

 %+:0   ! The morpheme boundary never appears on the surface side.

 %{apo%}:'   ! Apostrofy is needed separating inflectional affix from foreign word lemma
 %{apo%}:0   ! ... but Sg Nom is without apostrofy
 
 %{no.apo%}:0  ! no apostrofy; for deleting apostrofy (used for foreign word inflections) from sg nom

! short stops

 G1:g ! In strong grade, G1 is g
 G1:0 ! In weak grade, G1 is 0
 G1:k ! lagi lae lakke
 B1:b ! In strong grade, B1 is b
 B1:0 ! In weak grade, B1 is 0
 B1:p ! saba sappa
 D1:d ! In strong grade, D1 is d
 D1:0 ! In weak grade, D1 is 0
 D1:t ! ida itta

! orthographic convention: after voiceless (e.g. s or h, or k p t (?)), gbd is written as kpt
! e.g. õhk-õhu, vask-vase
! K1 also in: uks, jooksma
! P1 also in: laps
! T1 also in: jätma, katma, kütma, matma, võtma, mõtlema, ütlema

 K1:k ! In strong grade, K1 is k
 K1:0 ! In weak grade, K1 is 0
 P1:p ! In strong grade, P1 is p ?? EKK: never happens ??
 P1:0 ! In weak grade, P1 is 0   ?? EKK: never happens ??
 T1:t ! In strong grade, T1 is t
 T1:0 ! In weak grade, T1 is 0

 B2:b ! In strong grade, B2 is b; e.g. tiib
 B2:v ! In weak grade, B2 is v; e.g. tiiva
 B2:p ! tõbi tõppe

 K2:k ! In strong grade, K2 is k
 K2:g ! In weak grade, K2 is g
 P2:p ! In strong grade, P2 is p
 P2:b ! In weak grade, P2 is b
 T2:t ! In strong grade, T2 is t
 T2:d ! In weak grade, T2 is d

 G3:g ! In strong grade, G3 is g Riiga
 G3:0 ! In weak grade, G3 is 0   Riia
 D3:d ! In strong grade, D3 is d Randu
 D3:0 ! In weak grade, D3 is 0   Rannu

 G4:g ! ad hoc solution for some proper nouns like Rõngu, 
      ! where strong grade is also Rõngu (not Rõnku)

 H3:h ! for 4 instances of h-illative: sohu, suhu, öhe, pähe 
 H3:0 
 Y3:u ! sohu, suhu
 Y3:e ! öhe, pähe
 Y3:0

 S1:s ! In strong grade, S1 is s
 S1:0 ! In weak grade, S1 is 0; before stop, S1 is 0

A6:a   ! pea - pähe, päid
A6:ä
E6:e   ! pea - pähe, päid
E6:0
Ö6:ü   ! söö+a - süüa
Ö6:ö
Ö6:õ    ! söö+i - sõi
Ö6:0
O6:u   ! too+a - tuua
O6:o
O6:õ    ! too+i - tõi
O6:0

E4:e   ! aeg - aja; soe - sooja
E4:j

E1:e    ! soolase, raudset
E1:0    ! soolas t

I1:i    ! an ugly trigger for ne/s words katkine - katkisil
A1:a    ! an ugly trigger for ne/s words pingne - pingsa

K3:k    ! vennakse
K3:0    ! venna s

A2:a   ! valvas
A2:0   ! valv sa
E2:e   ! laulev
E2:0   ! laul va
I2:i   ! õilis
I2:0   ! õil sa
U2:u   ! hirmus
U2:0   ! hirm sa

A7:a   ! naerab
A7:0   ! naer ma
E7:e   ! jookseb
E7:0   ! jooks ma

J1:i   ! ahi, rohi
J1:j   ! ahju
J1:0   !      rohu
J1:e   ! aed

M1:m   ! lumi
M1:n   ! lun d

! Stem vowels for singular and plural
! For plural partitive, the form is generated either with sg vowel + sid or plural vowel + 0
! tünga
 %{sg.a%}:a  ! Stem vowel tag in lexicon
 %{sg.a%}:0  ! Stem vowel tag in lexicon
! neeme
 %{sg.e%}:e  ! Stem vowel tag in lexicon
 %{sg.e%}:0  ! Stem vowel tag in lexicon
! default sg stem vowel for most types
 %{sg.i%}:i  ! Stem vowel tag in lexicon
 %{sg.i%}:0  ! Stem vowel tag in lexicon
! koonu
 %{sg.u%}:u  ! Stem vowel tag in lexicon
 %{sg.u%}:0  ! Stem vowel tag in lexicon

! poissa; not used in modern Estonian
! %{pl.a%}:a  ! Stem vowel tag in lexicon
! %{pl.a%}:0  ! Stem vowel tag in lexicon
! kingi
 %{pl.i%}:i  ! Stem vowel tag in lexicon
 %{pl.i%}:0  ! Stem vowel tag in lexicon
! tõuge
 %{pl.e%}:e  ! Stem vowel tag in lexicon
 %{pl.e%}:0  ! Stem vowel tag in lexicon
! laudu
 %{pl.u%}:u  ! Stem vowel tag in lexicon
 %{pl.u%}:0  ! Stem vowel tag in lexicon

! ne, s ending words have similar paradigms; only sg nom is different
n:n   ! soolane and other ne-words
n:s   ! soolas+e, soolas+t etc  
e:e   ! soolane
e:0   ! soolas0+e 

! -le/-el stem alternations also use e:0, in addition to 0:e (sip0lema-sipel0da)

! high vowel lowering in certain contexts
 i:e    
 i:i 
 u:o
 u:u
 ü:ö
 ü:ü   

! verb affixes have k-g and t-d-0 alternations
! imperative mood affixes gu/ku, ge/kem etc
G7:g
G7:k

! infinitive and gerund ta/da/a, tes/des/es
D7:d
D7:t
D7:0

! impersonal voice affixes tud/tud, takse/dakse etc
T7:d
T7:t


! for making verb form pronouncable
I7:i  ! naeris
I7:0  ! naer sin

! personal past indicative forms
S7:s  ! naeris
S7:0  ! pani

! t:d ... if we say that plural affix +te appears as +de for tütar-type words,
! then the cont. lexicons will be simpler 

%.:0 ! double the previous letter (kabinet - kabinetti; tulema - tulla)

! usage tag; never on the surface side

 %{hyp%}:0        ! hypothetical form (norm, but never used); e.g. siilisid, puudi
 %{rare%}:0       ! rare or less used form (norm) ; e.g. kingasid
 %{notnorm%}:0    ! rare or less used form (not norm); e.g. piprate
 %{commonnotnorm%}:0   ! more commonly used form (but not norm); e.g. peeneid (norm: peeni)

! Inflectional affixes having the same grammatical meaning:
! sid/0; id/sid; sse/0
! their choice depends on triggers in the lexicon
! have to be defined un-naturally letter by letter

 %{i%}:i   ! i of sid: pl par ending siilisid
 %{i%}:0   !        0: pl par ending siile
 %{d%}:d   ! d of sid: pl par ending siilisid
 %{d%}:0   !        0: pl par ending siile


 %{s%}:s  ! s of -sse jõesse; -sid siilisid 
 %{s%}:0  !        -0  jõkke; -0 siile; 0 puid
 %{e%}:e  ! e of -sse jõesse;  
 %{e%}:0  !        -0  jõkke; 

 %{id%}:0   ! trigger / lexicon flag for pl part possible ending (esseesid/esseid)
 %{stemill%}:0 ! trigger / lexicon flag for short sg ill, formed by stem change (jõgi-jõkke)

;

Diacritics

! Stress, 3rd grade and palatalisation marks 
! Originally in the Filosoft lexicon; keep them for future 

´    ! kolmas aste ! 3rd grade: l´aud
`    ! rõhk        ! stress: sem`antiline
%,    ! peenendus   ! palatalisation: k´on,t

;

Sets

Vowel = A E I O U Õ Ä Ö Ü Y
        a e i o u õ ä ö ü y ;

Consonant = b c d f g h j k l m n p q r s š z ž t v w x 
            B C D F G H J K L M N P Q R S Š Z Ž T V W X ;

! stops
stop = g b d k p t ;

! sonorous consonants that have a special place in Est morph/phon
lmnr = l m n r ;

sonor = Vowel lmnr ;

! voiceless consonants  
voiceless = f s š h stop ; 

! possible stem- or ending vowels
stemV = a e i u ;

HighVowel = i ü u ;
MidVowel = e ö õ o ;
LowVowel = ä a ;

LowerBackVowel = o a ;

! last syllable nonstressed vowels that are not always pronounced 
! V0 = A2 E2 I2 U2 ;

! stem vowel tags in the lexicon: sg g, pl part 
! lauda, laudu; kinga, kingi; neeme, neemi etc. ; maja maju
SgSV = %{sg.a%} %{sg.e%} %{sg.i%} %{sg.u%} ;
PlSV = %{pl.e%} %{pl.i%} %{pl.u%};
SV = SgSV PlSV ;

! weak stops in the lexicon plus s; they disappear in weak grade
WS = G1 B1 D1 K1 P1 T1 G3 D3 S1 ;

! lexical side of consonants that participate in gradation
! LexGrad = G1 B1 D1 K1 P1 T1 S1 B2 K2 P2 T2 g b d k p t f s š ;

! Usage, style etc tags in lexicon
LT = %{hyp%} %{rare%} %{notnorm%} %{commonnotnorm%} ;

Definitions

Border = [ .#. | # ];  ! word border
Gi = [ [ :g | :k ] i ] ;
WordEnd = [ (%+: Gi) Border ];     ! final +gi is optional for almost any word

Null = [ :0 - Border ];            ! something on the lexical side, but nothing on the surface (except word border)
Any  = [ : - Border ];             ! anything except word border

WeakGrade = [%{W%}:0 | %{WL%}:0] ;
StrongGrade = %{S%}:0 ;
GradeTrigger = [ WeakGrade | StrongGrade ] ;

NullNoTrigger = [ Null - GradeTrigger ] ;
AnyNoTrigger = [ Any - GradeTrigger ] ;

! NonGrad = \[ LexGrad: ] ;  ! smth non-grading 
! AnyNonGrad = [ NonGrad - [ Border | GradeTrigger ] ] ;  ! anything non-grading except word border, and not the trigger either 

Rules 
 
! -----
! general 
"strong and weak gradation triggers cannot co-exist"
%{S%}:0  /<= _ :* WeakGrade ;
             WeakGrade :* _ ;

! ----- consonant gradation

! different contexts for declinables and verbs
! (because declinables may have additional info in the stem lexicon entries)
! left context has to be sonorous because of orthographic conventions:
! gbd are written as kpt after voiceless consonants
! 
"Weak grade for productive kpt:gbd"

!Cx:Cy  <=> :Vowel :sonor _ (%+:0) (SV:0) (LT:0) :stemV %{W%}: ;    ! kaup
!                  :sonor _ [l | r | j | v]      :stemV %{W%}: ;    ! kõblata
!           :Vowel :sonor _ 0:e [l | r]           e:0 %{W%}: ;    ! võidelda
Cx:Cy  <=> :Vowel :sonor _ Null*           :stemV %{W%}: ;  ! kaup-kauba, kurtma-kurdetud
                  :sonor _ [l | r | j | v] :stemV %{W%}: ;  ! kõblata
           :Vowel :sonor _ 0:e [l | r]        e:0 %{W%}: ;  ! võidelda
     where Cx in ( p t k ) 
           Cy in ( b d g )
     matched ;

! lexical: k a u p + {pl.u} {sg.a} {W}
! surface: k a u b 0    0      a    0
! lexical: k r a a p i {W} + n
! surface: k r a a b i  0  0 n
! lexical: k a t k u {W} + n
! surface: k a t k u  0  0 n
! lexical: k õ p l a {W} + t a
! surface: k õ b l a  0  0 t a
! lexical: v õ i t 0 l {W} + d a
! surface: v õ i d e l  0  0 d a
! lexical: s i p 0 l e {W} + d a
! surface: s i p e l 0  0  0 d a  ! no visible change
! lexical: l õ t v e {W}
! surface: l õ d v e  0        ! Sg Nom
! lexical: k u r t A7 0 {W} + T7 u d
! surface: k u r d  0 e  0  0  t u d


!!€ kraapi%{W%}%+n
!!€ kraabi00n

!!$ kraapi%{W%}%+n
!!$ kraapi00n


"Weak grade for productive kk pp tt šš ff : k p t š f"

!Cx:0 <=>  Cx _ (%+:0) (SV:0) (LT:0) :stemV (lmnr) %{W%}:  ;  ! sepa, lepin, aken, tütar, ...
Cx:0 <=>  Cx _ Null* :stemV (lmnr) %{W%}:  ;  ! sepa, lepin, aken, tütar, ...
     where Cx in ( p t k š f) ;

! lexical: k e p p + {pl.e} {sg.i} {W}
! surface: k e p 0 0    0      i    0 
! lexical: s e p p + {pl.i} {sg.a} {W}
! surface: s e p 0 0    0      a    0 
! lexical: l e p p i {W} + n
! surface: l e p 0 i  0  0 n 
! lexical: t ü t t A2 r {W}
! surface: t ü t 0 a  r 0 

! ss is different from kk pp tt šš ff
! buss Sg Gen (weak grade) is bussi, not busi...

"Weak grade for productive ss:s kauss, jamss"

!s:0 <=> :Vowel :sonor :s _ (%+:0) (SV:0) (LT:0) :stemV %{W%}: ;
s:0 <=> :Vowel :sonor :s _ Null* :stemV %{W%}: ;

! lexical: k a u s s + {pl.e} {sg.i} {W}
! surface: k a u s 0 0    0      i    0
! lexical: m a r s s i {W} + n
! surface: m a r s 0 i  0  0 n

"Lexically determined weak grade for b:v"

B2:v  <=> _ AnyNoTrigger* WeakGrade ;

! lexical: k ä i B2 e {W}
! surface: k ä i v  e  0

"Lexically determined weak grade for gk:0"

Cx:Cy  <=> _ AnyNoTrigger* WeakGrade ;
           _ Null* %+: :k ;                ! assimilation on affix border
           _ Null* %+: :t ;                ! assimilation on affix border
     where Cx in ( G1 K1 ) 
           Cy in (  0  0 )
     matched ;

! lexical: l a G1 {stemill} e {WL}
! surface: l a  0     0     e  0
! lexical: p u s K1 + G7 u
! surface: p u s  0 +  k u
! lexical: p u s K1 + T7 u d
! surface: p u s  0 +  t u d

"Lexically determined weak grade for dt:0"

Cx:Cy  <=> _ AnyNoTrigger* WeakGrade ;
           h J1: _ Null* WordEnd ;         ! rohi: word-final J1: makes sg nom "weak grade"
           _ Null* %+: :t ;                ! assimilation on affix border
     where Cx in ( D1 T1 ) 
           Cy in (  0  0 )
     matched ;

! lexical: l a u D1 + {pl.u} {sg.a} {W}
! surface: l a u  0 0    0      a    0
! lexical: a n D1 + T7 u d
! surface: a n  0 0  t u d

"Lexically determined weak grade for bp:0"

Cx:Cy  <=> _ AnyNoTrigger* WeakGrade ;
     where Cx in (B1 P1 ) 
           Cy in ( 0  0 )
     matched ;

"Lexically determined weak grade for s:0"

S1:0  <=> _ AnyNoTrigger* WeakGrade ;       ! paas - pae
          _ Null* [ :t | :d ] ;             ! vars - vart, varde

! lexical: p a a S1 + {pl.e} {sg.i} {WL}
! surface: p a 0  0 0   0       e    0
! lexical: v a r r S1 {stemill} {S} + d e + {s} {s} {e}
! surface: v a r 0  0      0     0  0 d e 0  0   0   0
! lexical: k o l m a n S1 d a
! surface: k o l m a n  0 d a

"Lexically determined weak grade for kpt:gbd; sg nom for ader, lubi"

Cx:Cy  <=>  _ AnyNoTrigger* WeakGrade ;
            _ J1:  Null* WordEnd ;          ! word-final ij: makes sg nom "weak grade" 
            _ E2:e [l | r] Null* WordEnd ;  ! ader sg nom is not WeakGrade; has e2:e
      where Cx in ( K2 P2 T2 ) 
            Cy in (  g  b  d )
      matched ;

! lexical: e r K2 A2 s {WL}
! surface: e r  g  a s  0
! lexical: e r K2 A2 s + a
! surface: e r  k  0 s 0 a
! lexical: a T2 E2 r + {pl.u} {rare}
! surface: a  d  e r 0    0     0
! lexical: l u P2 J1
! surface: l u  b  i 

!------- short illative stem generation
! the rules are hard-wired to %{S%}: 

"short illative strong stem generation: consonant doubling"

0:Cy  <=>  \[ :Vowel] :Vowel Cx:Cy _ NullNoTrigger* :Vowel NullNoTrigger* StrongGrade ; ! majja
     where Cx in ( l m M1 n r v j h s g b d k p t G1 B1 B2 D1 ) 
           Cy in ( l m  m n r v j h s k p t k p t  k  p  p  t )
     matched ;

! lexical: t u B1 0 a + {pl.e} {stemill} {S} + {s} {s} {e}
! surface: t u  p p a 0    0       0      0  0  0   0   0 

"short illative strong stem generation: stop to stronger stop"

Cx:Cy <=> :sonor Null* _ ( :Cy | j ) NullNoTrigger* :Vowel NullNoTrigger* StrongGrade ;
     where Cx in ( g b d G1 B1 B2 D1 G3 D3 ) 
           Cy in ( k p t  k  p  p  t  g  d )
     matched ;

! lexical: l a G1 0 {stemill} e  {S} + {s} {s} {e}
! surface: l a  k k     0     e   0  0  0   0   0
! lexical: A b j a {stemill} {S} + {s} {s} {e}
! surface: A p j a     0      0  0  0   0   0
! lexical: R a n n D3 u {stemill} {S} + {s} {s} {e}
! surface: R a n 0  d u     0      0  0  0   0   0

!--------- vowels

"nonstressed syllable vowel (a e u i) deletion"

Vx:Vy  <=>    _ Null* [:Consonant - :stop] Null* :stemV  ;
     where Vx in ( A2 I2 U2 E2 ) 
           Vy in (  0  0  0  0 )
     matched ;

! lexical: p e e n A2 r + a
! surface: p e e n  0 r 0 a 
! lexical: t ä h t I2 s + a
! surface: t ä h t  0 s 0 a 
! lexical: s u h k U2 r + u
! surface: s u h k  0 r 0 u 
! lexical: k o o r E2 m + a
! surface: k o o r 0  m 0 a 
! lexical: s e a d E2 m + e    ??
! surface: s e a d 0  m 0 e 
! lexical: a T2 E2 r + a
! surface: a  d  0 r 0 a 
! lexical: s p i k k E2 r + i
! surface: s p i k 0  0 r 0 i 

! some older verbs lose the stem final vowel in strong grade forms
"verb stem final vowel in weak grade (excl. impersonal)"

Vx:Vy  <=> _ WeakGrade %+: \[T7:] ;
     where Vx in ( A7 E7 ) 
           Vy in (  a  e )
     matched ;

! lexical: s e i s A7 {W} + b
! surface: s e i s  a  0  0 b 

! vowel lowering; 
! it is triggered by g b d t s disappearing or morpheme border between i and i

"i lowers to e before inflectional i"

i:e  <=>  [ :Consonant | %{apo%}:' ] (%+:0) _ Null* %+:0 :i ;
      
! lexical: v o o d i + i d
! surface: v o o d e 0 i d
! lexical: r u k K1 i + i d
! surface: r u k  k e 0 i d
! lexical: S c h e d u l e {apo} i + i d
! surface: S c h e d u l e   '   e 0 i d

"single short high vowel lowers if it obtains a neighboring vowel after stop or s disappears"

Vx:Vy  <=>  [Border | Consonant] :Vowel (LowerBackVowel:0) WS:0 Null* _  ;
           [Border | Consonant] _ WS:0 :Vowel ;
       where Vx in ( i u ü %{sg.i%} %{sg.u%} )
             Vy in ( e o ö     e        o    )
       matched;

! lexical: v i G1 a
! surface: v e  0 a
! lexical: s ü S1 e {W}
! surface: s ö  0 e  0

! lexical: s a a G1 {W} + {sg.i}
! surface: s a 0  0  0  0    e
! lexical: v o o G1 + {pl.e} {sg.u} {W} 
! surface: v o 0  0 0    0      o    0
! lexical: l i u G1 + {pl.e} {sg.u} {W}    
! surface: l i 0  0 0    0      u    0    NB! no lowering!

! here long vowel shortening is formally equivalent to one vowel deletion
! hence the need to use 2 rules instead of one <=> rule:
! there are other contexts where a vowel gets deleted

"Long vowel shortening 1/2"

Vx:0 =>     :Vx _ Null+ :stemV ;            ! puid, suid, soid, sae, soe, nea
         :Vowel _ Null+ :Vx ;               ! tõu, näub
            :Vx _ E4:e ;                    ! soe
      where Vx in ( Vowel ) ;  

"Long vowel shortening 2/2"

Vx:Vx /<=    :Vx _ Null+ :i ;            ! puid, suid, soid
          :Vowel _ Null+ :Vx ;               ! tõu, näub
             :Vx _ E4:e ;                    ! soe
      where Vx in ( Vowel ) ;  

"Long high vowel does not shorten before a stem vowel , unless it is i"

Vx:0 /<=  :Vx _ Null+ [:stemV - :i];            ! riiu, luua; puid
      where Vx in ( HighVowel ) ;  

"Long non-high vowel shortens before a stem vowel"

Vx:Vx /<= :Vx _ Null+ :stemV ;            ! sae, soid, soe
      where Vx in ( MidVowel LowVowel ) ;  

! lexical: s a a G1 + {pl.e} {sg.i} {W}
! surface: s a 0  0 0    0      e    0 
! lexical: h u u G1 a {W} + n u d      
! surface: h u u  0 a  0  0 n u d     NB! no shortening !
! lexical: s o o E4 
! surface: s o 0 e

! lexical: p u u             {id} + {idsid} i d
! surface: p u 0               0  0    0    i d

! lexical: t õ u G1 + {pl.e} {sg.u} {W}
! surface: t õ 0  0 0    0      u    0
! lexical: n ä u G1 u {W} + b 
! surface: n ä 0  0 u  0  0 b

!-----
! add a vowel to make the wordform pronouncable

"from -v to -ev"

0:e <=> :Consonant Null* %+: _ v WordEnd ;

! lexical: n ´ a e r + 0 v
! surface: n ´ a e r 0 e v

! impersonal voice for söötma, nutma, lõpma: söödetud, nutetud, lõpetud
"from t+t to te+t"

0:e <=> [t: | T1: | p:] Null* _ WeakGrade %+: T7:t ;

! lexical: n ´ u t t A7 0 {W} + T7 u d
! surface: n ´ u t 0  0 e  0  0  t u d

! i is added to make s-ending preteritum form pronouncable,
! or i is actually the only morpheme indicating preteritum

"i surfaces in preteritum"

I7:i <=> :Consonant Null* %+: _ S7: WordEnd ;
         _ WordEnd ;

! lexical: n ´ a e r + I7 S7
! surface: n ´ a e r 0  i  s
! lexical: s a a + I7
! surface: s a 0 0  i

! --------- verb stem changes -------
! not really gradation

! siplema-sipelda

"el-le 1/3"

e:0 <=> :e [l | r] _ WeakGrade %+: ;

"el-le 2/3"

0:e <=> [:Consonant | WS:0] _ [l | r] e:0 WeakGrade %+: ;

! in weak grade, -le- is impossible (has to be -el-)
"el-le 3/3"

e:e /<= [:Consonant | WS:0] [l | r] _ WeakGrade %+: ;

! lexical: s i p 0 l e {W} + d a
! surface: s i p e l 0  0  0 d a
! hüüdlema-hüüelda
! lexical: h ´ ü ü D1 0 l e {W} + d a
! surface: h ´ ü ü 0  e l 0  0  0 d a

! -------- rules that operate on a small set of different words

"Long vowel shortens before h 1/2"

Vx:0 => :Vx _ H3:h  :stemV ;            !  sohu, suhu, öhe, pähe
      where Vx in ( Vowel ) ;  

"Long vowel shortens before h 2/2"

Vx:Vx /<= :Vx _ H3:h  :stemV ;            !  sohu, suhu, öhe, pähe
      where Vx in ( Vowel ) ;  

! ------ rules for j
! ------ they affect a handful of words

! --- j is not in the lexical side
"e pronounced as j between vowels "

E4:j  <=> [:Vowel - :i] Null* _ Null* [:Vowel - :i] ;

! lexical: a E4 G1 
! surface: a  e  g
! lexical: a E4 G1 a
! surface: a  j  0 a
! lexical: s o o E4  
! surface: s o 0 e 
! lexical: s o o E4 a 
! surface: s o o j  a 

! --- j is in the lexical side, but surfaces only in certain contexts

! 1. after a consonant, j may be i only in word final position
! 2. immediately after a vowel, j may be i only if the following stop has been deleted and a vowel follows
! (this is ad hoc for aed - aia ... )
"j appears as i"

J1:i  <=> :Consonant _ Null* WordEnd ;
          :Vowel _ :0 Null* :Vowel ;

! lexical: a h J1 + {pl.e} {rare}
! surface: a h  i  0    0      0
! lexical: a J1 D1 + {pl.u} {sg.a} {W}
! surface: a i   0 0    0      a    0

! only for 2 words - aed, aetud ...
"j appears as e"

J1:e  <=> :Vowel _ Null* :Consonant ;

! lexical: a J1 D1 
! surface: a e   d 

! ahju, härja, saja

"j surfaces only if some (stem)vowel follows"

J1:j  => :Consonant _ Null* :Vowel ;
         :Vowel (D1:0) _ :Vowel ;

! lexical: a h J1 + {pl.e} {rare} {sg.u} {W}
! surface: a h j  0   0       0      u    0
! lexical: h ä r J1 G1 + {pl.i} {sg.a} {W}
! surface: h ä r j  0  0    0      a    0
! lexical: s a D1 J1 a + {pl.u} {W}
! surface: s a 0  j  a 0    0    0

"j does not surface between consonants 1/2"
    
J1:j /<=           h _ T1:  ;
             [l | r] _ :stop ;

"j does not surface between consonants 2/2"

J1:0  =>           h _ T1:  ;
             [l | r] _ :stop ;

! lexical: r o h J1 T1 + {pl.e} {rare}
! surface: r o h  0  t 0    e      0
! lexical: r o h J1 T1 + {pl.e} {rare} {sg.u} {W}
! surface: r o h  0  0 0    0      0     u     0
! lexical: h ä r J1 G1 + {pl.i} {sg.a} 
! surface: h ä r 0  g  0    0      a   

! only koda, pada, rada, sadu, sõda, sada, sadama
! use D1 as a trigger 
! (D1 is non-zero only in strong grade) 

"koda etc: j does not surface in strong grade 1/2"

J1:j /<=  [D1:d | D1:t] (:t) _ Null* :Vowel ;

"koda etc: j does not surface in strong grade 2/2"

J1:0  =>  [D1:d | D1:t] (:t) _ Null* :Vowel ;

! lexical: s a D1 J1 a 
! surface: s a d  0  a 
! lexical: s õ D1 0 J1 a + {pl.u} {stemill} {S} + {s} {s} {e}
! surface: s õ t  t 0  a 0    0       0      0  0  0   0   0

! --- 
! juus-juuksed, kälis-käliksed, nõos-nõoksed, omas-omaksed, vennas-vennaksed, ões-õeksed 
"vennas-vennaksed"

K3:k  <=> _ s E1:e ;

! lexical: v e n n a K3 s E1 + d 
! surface: v e n n a k  s  e 0 d

!------
"laas-laane"

n:0  <=> \[:Consonant] _ S1:s ;   ! laas-laane, tuhandes-tuhendenda etc

! lexical: l a a n S1 
! surface: l a a 0 s
!------
! Only pea, hea 
"Pea, hea vs häid, päid, pähe 1"

A6:ä  <=> E6: _ :h ;
          E6: _ Null+ :i ;   

"Pea, hea vs häid, päid, pähe 2"

E6:0  <=> _ A6: :h  ;
          _ A6: Null+ :i ;

"öhe, pähe"
Y3:e  <=> [:ä | :ö] Null* H3:h _ ;

"sohu, suhu"
Y3:u  <=> [:o | :u] Null* H3:h _ ;

"h-illative"
H3:h  <=> _ :* StrongGrade ;

!------
"Verb vowel ö o to õ"

Vx:õ  <=> Vx: _ Null+ :i ; 
     where Vx in ( Ö6 O6 ) ; 

"Verb vowel ö o to 0"

Vx:0  <=> _ Vx:õ Null+ :i ; 
     where Vx in ( Ö6 O6 ) ; 

! lexical: l O6 O6 + i 
! surface: l  0  õ 0 i 

"Verb vowel o ö to u ü"

Vx:Vy  <=>  Vx: _  Null+ [:a | :e] ; 
             _ :Vy Null+ [:a | :e] ;
     where Vx in ( Ö6 O6 ) 
           Vy in ( ü  u )
     matched ;

! lexical: l O6 O6 {WL} + T7 a k s e 
! surface: l u   u   0  0  0 a k s e 
!------

! a general rule, but has to be encoded with M1 to allow for komtuur, EMT etc
"m pronounced as n before t"

M1:n  <=> _ Null* [:t | :d ] ;

! lexical: l e e M1 {stemill} {rare} + t
! surface: l e e  n      0        0   0 t 

! ---------- morphology
   
! --------- -ne, -s ending words
! xxx rules are needed for allowing -ne only for sg nom

! we want to express correspondence: ne -> s in the context of E1, I1 or A1
"ne to s (1/2)"

n:s  =>       _ e: E1:  ;
              _ e: Null* I1: ;
              _ e: A1:  ;

"ne to s (2/2)"

e:0  /<= n:n _ E1: ;
         n:n _ A1: ;

"e disappearing (ne - s) 1/2"

e:0 <=>       n: _ E1: ;                    ! kodune - kodust, koduse
              n: _ Null* I1: ;               ! katkine - katkisil
              n: _ A1: ;                    ! pingne - pingsa

! we postulate that there is a special stem vowel e that is added both for -ne and -s words
"add e for inflecting a ne/s word "

E1:e   => n:s e:0 _ ;  ! -ne word
          s _ ;      ! -s word

! lexical: s o o l a n e E1
! surface: s o o l a s 0 e
! lexical: v i s k o o s n e E1 + t
! surface: v i s k o o s s 0 e  0 t

! -ne, -s word e deletion 
"do not add e for inflecting some forms of ne/s word "

E1:0  <=> :Vowel Null* :s Null* _ Null* s e ;          ! olulisse (haplology)
          :Vowel Null* :s Null* _ Null* t WordEnd ;   ! soolast
          :Vowel Null* :s Null* _ Null* t e ;        ! soolaste

! lexical: o l u l i n e E1 + s e 
! surface: o l u l i s 0  0 + s e
! lexical: s o o l a n e E1 + t
! surface: s o o l a s 0  0 0 t
! lexical: g l o o b u s E1 + t 
! surface: g l o o b u s  0 0 t
! lexical: g l o o b u s E1 + t e
! surface: g l o o b u s  0 0 t e
! lexical: g l o o b u s E1 + t a
! surface: g l o o b u s  e 0 t a
! lexical: r a u d n e E1 + t    ! NB! no e deletion
! surface: r a u d s 0  e 0 t

! lexical: v i s k o o s n e E1 + t  ! NB! no e deletion
! surface: v i s k o o s s 0 e  0 t

!!€ viskoosneE1+t
!!€ viskooss0e0t

!!$ viskoosneE1+t
!!$ viskooss000t

! i is a vowel that starts Pl Par or vowel plural affixes; use I1 as a trigger
"I1 triggers -ne to be -s"

I1:i   => n:s e:0 Null* _ ;   ! -ne word
          s Null* _ ;       ! -s word

! lexical: k a t k i n e + I1
! surface: k a t k i s 0 0  i
! lexical: g l o o b u s + I1
! surface: g l o o b u s 0  i

! ---------
! affix allomorphs

! noun pl affix te -> de; 
! thus tütar, kannel, pinge, kotkas appear similar

"+te appears as +de in tütar-type words"
 t:d <=> [A2:a | E2:e] lmnr WeakGrade %+: _ e ; 

! lexical: s ´ õ s t A2 r {W} + t e
! surface: s 0 õ s t  a r  0  0 d e

! similar to imperative mood affixes
! default: D7:d
! lexical: s i p 0 l e {W} + D7 a
! surface: s i p e l 0  0  0  d a

! default for infinitive and gerund affixes is D7:d

"infinitive and gerund affixes may begin in t"

D7:t  <=> :Vowel Null* WeakGrade %+: _ ;
          :s Null* %+: _ ;

! lexical: h ü p p a {W} + D7 a
! surface: h ü p 0 a {W} +  t a
! lexical: s e i s + D7 a 
! surface: s e i s 0  t a

"infinitive and gerund affixes may assimilate to 0"

D7:0  <=>  [:p | :t | :d] Null* %+: _ ; ! tappa, kasta, nutta, anda, niita, nõuda, ... 

! lexical: k ü T1 t + D7 a 
! surface: k ü  t t 0  0 a
! lexical: k e e T2 + D7 a 
! surface: k e e  t 0  0 a
! lexical: k ü n n D1 + D7 a
! surface: k ü n 0  d 0  0 a

! d cannot follow a voiceless consonant; 
! this is a general rule that is repeated here for the D7:d case

"orthography for da, des"

D7:d /<= :voiceless Null* _ ;

! lexical: l a s K1 + D7 a 
! surface: l a s  k 0  d a   <-- FAIL

"impersonal voice affix may begin in d"

T7:d  <=> [l | n | r] e:0 WeakGrade %+: _ ;
          [l | n | r] [A7:0 | E7:0] %+: _ ;

! lexical: s i p 0 l e {W} + T7 u d
! surface: s i p e l 0  0  0  d u d
! lexical: n a e r A7 + T7 u d
! surface: n a e r  0 0  d u d

! default: T7:t
!
! lexical: e l a + T7 a k s e
! surface: e l a 0  t a k s e
! lexical: l e p p i {W} + T7 a k s e
! surface: l e p 0 i  0  0  t a k s e
! lexical: s e i s + T7 a k s e
! surface: s e i s 0  t a k s e
! lexical: a n n D1 + T7 a k s e
! surface: a n 0  0 0  t a k s e
! lexical: j o o K1 s {W} + T7 a k s e
! surface: j o o  0 s  0  0  t a k s e

"imperative mood affix may begin in k"

G7:k  <=> \[:Vowel] a Null* WeakGrade %+: _ ;
          :voiceless Null* %+: _ ;

! lexical: h ü p p a {W} + G7 u
! surface: h ü p 0 a {W} +  k u
! lexical: l õ u G1 a {W} + G7 u
! surface: l õ u  0 a {W} +  k u
! lexical: s e i s + G7 u 
! surface: s e i s 0  k u

"from -is to -i"

S7:0 <=> [:Consonant | Border] Null* :Vowel :Consonant Null* %+: I7: _ WordEnd ;  ! lasi
         :s Null* _ ;    ! to eliminate jookssid, seissid

! lexical: p e s + I7 S7
! surface: p e s 0  i  0
! lexical: l a s K1 {W} + I7 S7 i n
! surface: l a s  0  0  0  0  0 i n
! lexical: l a s K1 {W} + I7 S7      
! surface: l a s  0  0  0  i  0       
! lexical: s e i s + I7 S7
! surface: s e i s 0  i  s          NB! S7:s
! lexical: k ´ ü T1 t + I7 S7 i n
! surface: k ´ ü  t 0 0  0  s i n   NB! S7:s

! ---------
! Rules for selecting 
! 1. the inflectional affix and 
! 2. its usage info 
! for inflectional types where alternative affixes are common, 
! but depend on the frequency of individual words.
! The alternatives themselves are encoded in continuation lexicons, but the triggers for
! selecting the correct variant for the word are encoded in the stem lexicon entries.
! The affixes concerned are:
! 1. plural partitive: 1.1. -sid vs stem vowel change; 1.2. -sid vs -id
! 2. singular illative: -sse vs stem grade strengthening; 
! ---------

!! 1.1. plural partitive: -sid vs stem vowel change
!
! PIIM, KOON, EIT + PL_PAR
! pl part kingi/kingasid, koone/koonusid etc
! co-play of several rules with stem lex and contin. lex info for plural partitive:
! 1. generate correct plural forms
!    - -sid is always possible
!    - vowel is possible only when shown in stem lex
! 2. add usage info (rare, hyp) for the generated forms
!    - if stem lex shows vowel without usage tag, then -sid form is rare
!    - if stem lex has usage tag (rare, hyp) after vowel, then this form is rare or hyp
! note the use of LT (Lexicon-based usage Tag) in rules

! ---------
! affixes sid, id and sse have to be unnaturally described symbol-by-symbol

! affixes sid, sse, id

"i for sid"
%{i%}:i        <=>  :s _ :d ;

"d for sid"
%{d%}:d        <=>  :s :i _ ;

"s for sse, sid"
%{s%}:s         =>  :s _ :e ;   ! sse
                    _ :s :e ;   ! sse
                    _ :i :d ;   ! sid

"e for sse"
%{e%}:e        <=>   :s :s _ ;

! rules for choosing the shorter wordform depend on info in the lexical entry
"choosing short(er) affix: 0 vs sid, 0 vs sse, id vs sid"

%{s%}:0     =>  PlSV:stemV   Any* _ %{i%}:0 %{d%}:0; ! short Pl Par needs its stem vowel indicated in the lexicon
                %{id%}:      Any* _ i d ;            ! -id needs a trigger in the lexicon
                %{stemill%}: Any* _ %{s%}:0 %{e%}:0; ! stem (aka short) illative needs a trigger in the lexicon
                                  %{s%}:0 _ %{e%}:0; ! the middle s is sometimes zero, of course  

! lexical: s a b a + {pl.u} {rare} {stemill} + {s} {i} {d} 
! surface: s a b 0 +    u      0       0     0  0   0   0 
! lexical: p u u {id} + {s} i d 
! surface: p u 0  0   0  0  i d 
! lexical: s a b . a + {pl.u} {rare} {stemill} {S} + {s} {s} {e} 
! surface: s a p p a +    0      0       0      0  0  0   0   0 


"No sg stem vowel if no Pl Par with -sid (choose pl stem vowel instead)"

Vx:0  <=>  %+:0 PlSV:stemV Null* _ Null* %{s%}:0 ;
     where Vx in ( %{sg.a%} %{sg.e%} %{sg.u%} %{sg.i%} ); 

"Choose pl stem vowel for Pl Par (sg stem vowel is 0) "

Vx:Vy  <=>  :Consonant Null* %+:0 _ Null+ %{s%}:0 ;     ! puud-puudi, maja - maju
                     i Null* %+:0 _ Null+ %{s%}:0 ;     ! sai - saiu
     where Vx in ( %{pl.e%} %{pl.i%} %{pl.u%} ) 
           Vy in (     e        i        u   )
     matched ;

! lexical: k i n g + {pl.i}       {sg.a} + {s} {i} {d}
! surface: k i n g 0    i            0   0  0   0   0  
! lexical: p u u d + {pl.i} {hyp} {sg.a} + {s} {i} {d} {rare}
! surface: p u u d 0    i     0      0   0  0   0   0     0 
! lexical: k a u p + {pl.u}       {sg.a} + {s} {i} {d}  
! surface: k a u p 0    u            0   0  0   0   0
! lexical: m a j a + {pl.u}        {stemill} + {s} {i} {d} 
! surface: m a j 0 0    u             0     0   0   0   0    
! lexical: s a b a + {pl.u} {rare} {stemill} + {s} {i} {d} {rare}
! surface: s a b 0 0    u     0        0     0  0   0   0     0 


! ------------

! maja-maju/majasid, osa-osi/osasid, nuga-nuge/nugasid
! if vowel plural is possible, then it has to be indicated in stem lexicon
! concerns only words ending with -a  

"final vowel substitution for plural vowel"

a:0  <=> :Consonant ( J1: ) _ %+: PlSV:stemV Null* %{s%}:0 %{i%}:0 %{d%}:0 ;

! lexical: m a j a + {pl.u} {stemill} + {s} {i} {d}
! surface: m a j 0 0    u       0     0  0   0   0

! --------------
! 2. singular illative: -sse vs stem grade strengthening
!
! bisyllabic vowel-ending words may have a stem illative (also called as short illative) 
! but it is exceptional, and actually usable only for frequently occurring words.
! thus it has to be indicated in a stem lexicon with %{stemill%}
! (the same applies to exceptional words whose short illative is without stem gradation (põrgu; Kunda) ) 
! 
! lagi-laesse/lakke, keel-keelesse/keelde
! co-play of xxx rules with stem lex info for lagi, nimi, sõda; Riia, Kunda, ...

! ------
! general relations between short illative and stem grade

"weak grade is incompatible with exceptional stem (aka short) illative"
%{W%}:0       /<=  _ Any* %{s%}:0 %{s%}:0 %{e%}:0  ;    

! use {WF} in PERE, to prevent pere+Ill:pere

"less strict weak grade is incompatible with exceptional stem (aka short) illative"
%{WL%}:0       /<=  _ Any* %{s%}:0 %{s%}:0 %{e%}:0  ;    

"(extra) strong grade is incompatible with sse-illative"
%{S%}:0       /<=  _ Any* %{s%}:s %{s%}:s %{e%}:e  ;      

! ------
! we (mis)use 2-level formalism to prune spurious branches that emerge from continuation lexicons
!
! usage tag (LT for "lexical tag") is used for controlling paths
! that have the same lexical side, but different surface realisation
! so that the final lexical side has usage info indicated

! (the first lexical tag (LT) comes from the stem lexicon, the second from a continuation class lexicon)

! -sse sg ill cannot be rare, if the stem lexicon tag says that short form is rare;
! -sse sg ill cannot be common, if there is no lexicon tag that would say that short form is rare;
! -sse sg ill cannot be rare, if the lexicon contains no tag to indicate that short form exists;

! short sg ill is rare, if the lexicon tag says it is rare;
! short sg ill is common, if there is no lexicon tag to indicate that it is rare
! note that {stemill} has to be indicated in lexicon; and weak grade is impossible

! short pl par is rare, if the lexicon tag says it is rare;
! short pl par is common, if there is no lexicon tag to indicate that it is rare;
! (short pl par is impossible without a plural stem vowel)

! -sid pl par cannot be rare, if the lexicon tag says that short form is rare;
! -sid pl par cannot be common, if there is no lexicon tag that would say that short form is rare;
! -sid pl par cannot be rare, if the lexicon contains no pl vowel to indicate short form ;

"usage tag may be in several places"
LT:0          =>  %{stemill%}: _ ;      ! stem illative usage tag in the lexicon follows the trigger
                         PlSV: _ ;      ! short pl partitive usage tag in the lexicon follows the plural stem vowel 
                       %{id%}: _ ;      ! -id plural partitive usage tag in the lexicon follows the trigger 
                  %{stemill%}:  LT: Any* %{s%}:0 %{s%}:0 %{e%}:0   _  ;   ! nimme is rare
                  %{stemill%}: \LT: Any* %{s%}:s %{s%}:s %{e%}:e   _  ;   ! majasse is rare
                    PlSV:stemV  LT: Any* %{s%}:0 %{i%}:0 %{d%}:0  _ ;   ! puudi is rare
                    PlSV:0     \LT: Any* %{s%}:s %{i%}:i %{d%}:d  _ ;   ! kaupasid is rare
                       %{id%}:  LT: Any* %{s%}:0 i d _  ;   ! esseid is rare
                       %{id%}: \LT: Any* %{s%}:s i d _  ;   ! puusid is rare


"long plural partitive cannot be common if the word already has a common short plural partitive"
%{s%}:s    /<= PlSV:0 \LT: Any* _ %{i%}:i %{d%}:d \LT: ; 

"short plural partitive cannot be common if the lexicon tag says it is rare"
%{s%}:0    /<= PlSV:stemV LT: Any* _ %{i%}:0 %{d%}:0 \LT: ; 

! lexical: p u u d + {pl.i} {hyp} {sg.a} + {s} {i} {d} {rare}
! surface: p u u d 0    i     0      0   0  0   0   0      0     
! lexical: p u u d + {pl.i} {hyp} {sg.a} + {s} {i} {d} WordEnd
! surface: p u u d 0    i     0      0   0  0   0   0           FAIL
! lexical: k a u p + {pl.u}       {sg.a} + {s} {i} {d} {rare}
! surface: k a u p 0    u            0   0  0   0   0      0    FAIL
! lexical: t ü n g                {sg.a} + {s} {i} {d}
! surface: t ü n g                   a   0  s   i   d           

! lexical: p u u d + {pl.i} {hyp} {sg.a} + {s} {i} {d} {rare}
! surface: p u u d 0    0     0      a   0  s   i   d     0    FAIL
! lexical: k a u p + {pl.u}       {sg.a} + {s} {i} {d} WordEnd
! surface: k a u p 0    0            a   0  s   i   d          FAIL
! lexical: t ü n g                {sg.a} + {s} {i} {d} {rare}
! surface: t ü n g                   a   0  s   i   d     0    FAIL

"-id plural partitive cannot be common if the lexicon tag says it is rare"
%{s%}:0  /<=  %{id%}: LT: Any* _ i d \LT:  ;

"-sid plural partitive cannot be common if the word has a common -id plural partitive"
%{s%}:s  /<= %{id%}: \LT: Any* _ i d \LT:  ;

! lexical: p u u     {id}        + {s} i d {rare}
! surface: p u u      0          0  s  i d   0
! lexical: g n u u               + {s} i d WordEnd
! surface: g n u u               0  s  i d 
! lexical: g n u u               + {s} i d {rare}
! surface: g n u u               0  s  i d    0      FAIL 
! lexical: e s s e e {id} {rare} + {s} i d {rare}
! surface: e s s e 0  0      0   0  0  i d   0 
! lexical: e s s e e {id} {rare} + {s} i d {rare}
! surface: e s s e 0  0      0   0  s  i d    0      FAIL
! lexical: e s s e e {id} {rare} + {s} i d WordEnd    
! surface: e s s e 0  0      0   0  0  i d        FAIL
! lexical: e s s e e {id} {rare} + {s} i d WordEnd
! surface: e s s e 0  0      0   0  s  i d      
! --------------

"long illative cannot be common if the word has a common short illative already"
%{s%}:s      /<= %{stemill%}: \LT: Any* _ %{s%}: %{e%}: \LT:  ;

"short illative cannot be common if the lexicon tag says it is rare"
%{s%}:0      /<= %{stemill%}: LT: Any* _ %{s%}: %{e%}: \LT:  ;

! majja is common, majasse is rare
! lexical: m a j 0 a + {pl.u} {stemill} {S} + {s} {s} {e}
! surface: m a j j a 0    0       0      0  0  0   0   0
! lexical: m a j   a + {pl.u} {stemill} {W} + {s} {s} {e} {rare}
! surface: m a j   a 0    0       0      0  0  s   s   s    0

! nimesse is common, nimme is rare
! lexical: n i m 0 {stemill} {rare} e {S} + {s} {s} {e} {rare} 
! surface: n i m m     0        0   e  0  0  0   0   0    0
! lexical: n i m   {stemill} {rare} e {W} + {s} {s} {e}
! surface: n i m       0        0   e  0  0  s   s   e  

! tuppa is common, toasse is rare
! lexical: t u B1 0 a + {pl.e} {stemill} {S} + {s} {s} {e}
! surface: t u  p p a 0    0       0      0  0  0   0   0 
! lexical: t u B1   a + {pl.e} {stemill} {W} + {s} {s} {e} {rare}
! surface: t o  0   a 0    0       0      0  0  s   s   e     0

! loppa is impossible, lobasse is common
! lexical: l o b a                       {W} + {s} {s} {e}
! surface: l o b a                        0  0  s   s   e

! --------- orthography

! Orthography: consonant (cluster) writing conventions
! NB! Foreign names may contain them, e.g. Uppsala, Mannheim
! Treffner, Gottlieb, Seattle
! 1) if a vowel is deleted, the resulting consonant cluster may have to be modified
! (note: no consonant deletion before particle -gi/ki)

"consonant de-doubling in consonant clusters (e.g. after vowel deletion)"

Cx:0 <=> :Cx _ Null+ [[Consonant Any* Border] - [Gi Border]];
         :Cx _ Null* %+: Null* [[:Consonant Any* Border] - [Gi Border]];
      where Cx in (Consonant) ;

! lexical: s p i k k E2 r + i
! surface: s p i k 0  0 r 0 i 
! lexical: k õ r r S1 {stemill} {rare} + t e
! surface: k õ r 0  0     0        0   0 t e
! lexical: k ü n n D1 + T7 u d
! surface: k ü n 0  0 +  t u d 

! 2) in this treatment, some consonants have been written as double in the lexicon 
! because they are pronounced long;
! this violates Estonian orthography, and these rules set them right again
! need several rules for lmnr because e.g. n may get deleted in another context, e.g. lääs-lääne

"repair lmnr lmnr stop"

Cx:0 <=> :Cx _ WS:stop ;
      where Cx in (lmnr) ;

"repair rrs"

r:0 <=> :r _ S1:s ; ! kõrs

! lexical: k a n n D1 E2 l e
! surface: k a n 0  d  0 l e 
! lexical: k õ r r S1 
! surface: k õ r 0  s 
! lexical: k u l l D1 + {pl.i} {hyp}
! surface: k u l 0  d 0    0     0
! lexical: s ´ u n , n D1 i + m a
! surface: s 0 u n 0 0  d i 0 m a

! g b d is written as k p t after voiceless consonants
! this rule is restricted to affixes, because foreign words have conventions
! that do not follow this rule (lesginka)
"gbd to kpt after voiceless consonants"

Cx:Cy  <=> :voiceless Null* %+: _ ;
       where Cx in (g b d)
             Cy in (k p t)
       matched;

! lexical: s e i s + g i
! surface: s e i s 0 k i

! Orthographical convention for recent loans (kabinet) and -ik suffix

"double k p t"

%.:Cx  <=> :Cx _ AnyNoTrigger* WordEnd ;
      where Cx in (k p t) ;

! lexical: k a b i n e t . + {pl.e} {sg.i}
! surface: k a b i n e t t 0    0      i

! -----
! olema, tulema, minema, panema, surema --> 
! olla, tulla, minna, panna, surra; ollakse etc, olles etc
! the context is limited to a few inflectional forms

"double l m n r"

%.:Cx <=> :Cx _ Null* [ :a | :e ] ;
      where Cx in (lmnr) ;

! native monosyllabic word cannot be kät, has to be kätt 
! for 8 words like käsi, mesi
"+t doubles at the end of a short-syllable word"

0:t <=> Border (Consonant) Vowel Null* %+: t _ WordEnd ;

! lexical: k ä S1 + t 0
! surface: k ä  0 + t t

! pronounced mässlema, but written mäslema...
! foreign names Kessler etc have ssl cluster, so cannot use a general rule ssl -> sl
! have to resort to the following:
! in weak grade, the true length of a consonant becomes apparent...
! mäslema - mässelda is the only example, but the process itself is not unique

"mäslema"

0:s <=> Vowel s _ 0:e l e:0 WeakGrade ;

! lexical: m ä s 0 0 l e {W} + d a
! surface: m ä s s e l 0  0  0 d a     

! If a foreign word is pronounced not according to Estonian writing conventions (Braille - brai)
! then its inflectional ending is separated with an apostrophy (superscript 9) ’ 
! This applies even to Sg Gen: Braille’
! The only form without ’ is Sg Nom, so {no_apo} is a standard trigger in continuation lexicons
"No apostrofy"

%{apo%}:0  <=> _ %{no.apo%}: ;

! lexical: B r a i l l e {apo} {no_apo}
! surface: B r a i l l e   0      0     


!----------------

! for debugging in GT infra:
! in ~/svn-giellatekno/main/experiment-langs/est/src

! for looking at all the generated forms (use only if the lexicon is really small):
! hfst-fst2strings analyser-gt-desc.hfstol > tmp1

! echo 'laudu' | hfst-lookup analyser-gt-desc.hfstol
! > laudu	laud+N+Pl+Par	0,000000

! echo 'laud+N+Pl+Par' | hfst-lookup morphology/lexicon.hfst
! > laud+N+Pl+Par	lauD1+{pl.u}{sg.a}+{sid}	0,000000

! echo 'l a u D1:d +:0 {pl.u}:u {sg.a}:0 +:0 {s}:0' | hfst-pair-test phonology/est-phon.compose.hfst

! hfst & xfst:
! echo 'raudne+A+Sg+Par' | hfst-lookup morphology/lexicon.hfst 
! > raudne+A+Sg+Par	r´audneE1+t	0,000000

!  echo 'r´audneE1+t' | ~/xfst/bin/lookup -flags mbTT morphology/lexicon.xfst 
! > r´audneE1+t	raudne+A+Sg+Par
 

! a minimalistic way:
! make nets for lexc and twol:
! hfst-lexc -o tmp.lexc morphology/root.lexc
! hfst-twolc -o tmp.twol phonology/est-phon.twolc
! echo 'laud+N+Pl+Par' | hfst-lookup tmp.lexc

! echo 'l a u D1:d +:0 {pl.u}:u {sg.a}:0 +:0 {s}:0' | hfst-pair-test tmp.twol



