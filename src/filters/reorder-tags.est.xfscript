# move usage-related tags to the right
# algorithm: 
# 1) tag categories -> tag categories OK tag
# 2) delete tag if there is OK somewhere in the right side
# 3) delete OK

define RTag [ "+Use/Rare" ] ;       # norm, but rare 
define HTag [ "+Use/Hyp" ] ;         # norm, but so rare that norm is probaly wrong
define NTag [ "+Use/NotNorm" ] ; # not norm, but sometimes used
define CNTag [ "+Use/CommonNotNorm" ] ; # not norm, and used more than norm

define UTag [ RTag | HTag | NTag | CNTag ] ; # usage-related tag

define OK [ %+ O K ] ;   # temporary 

# grammatical categories
# missing: derivational tags???

define Number [%+Pl | %+Sg ] ;
define Case [ %+Nom | %+Gen | %+Par | %+Ill | %+Ine | %+Ela | 
              %+All | %+Ade | %+Abl | %+Tra | %+Trm | %+Ess | %+Abe | %+Com  ] ;
define Voice [ %+Impers | %+Pers ] ;
define Tense [ %+Prs | %+Prt ] ;
define Mood [ %+Ind | %+Cond | %+Imprt | %+Quot ] ;
define PN [ %+Sg1 | %+Sg2 | %+Sg3 | %+Pl1 | %+Pl2 | %+Pl3 ] ;
define Polarity [ %+Aff | %+Neg ] ;
define Sup [ %+Sup ] ;
define Inf [ %+Inf ] ;
define Ger [ %+Ger ] ;
define Prc [ %+Prc ] ;
define GI [ "+Foc/gi" ] ;

# combinations of categories that may happen to be on the left from a usage tag
# (according to the present continuation lexicons...)
define Ct  [ Number | Case | Voice | Tense | Mood | PN | Polarity | Sup | Inf | Ger | Prc |
           [Number Case] | 
           [PN Polarity] | [Mood PN Polarity] | [Mood PN] | [Mood Polarity] |
           [Tense Mood] | [Tense Mood Polarity] | [Tense Prc] ] ;
define Cat [ Ct | GI | [Ct GI] ];

define MoveR Cat @-> ... OK RTag || RTag _ ;  # replicate tag from left also to the right
define MoveH Cat @-> ... OK HTag || HTag _ ; 
define MoveN Cat @-> ... OK NTag || NTag _ ; 
define MoveCN Cat @-> ... OK CNTag || CNTag _ ; 

define DelUTag UTag -> 0 || _ ?* OK ;    # clean up: remove tags from left
define DelOK OK -> 0  ;                  # clean up: remove temporary tags

define CleanUp [ DelUTag .o. DelOK ] ;

# move tag over any categories 
define MoveCat [MoveR .o. MoveH .o. MoveN .o. MoveCN] ;

regex [MoveCat .o. CleanUp].i ;
