# disallow a derivation if:
# * its base belongs to a wrong word class
# (this happens because derivation is attached to a case form, 
# but by that time the word class is not available for the fst)
# * its base ends with an unsuitable string
# * the derivations' sequence is not right
# etc...

# notice that we are NOT concerned about compounds here

define Vow [ a | e | i | o | u | õ | ä | ö | ü ]; 
define Cons [ b | d | f | g | h | j | k | l | m | n | p | r | s | t | v ] ;
define ZZ [[Vow Cons+ Vow+ Cons*] | [Vow Vow Vow Cons*]];   # at least 2 syllables (kind of...)

# a BadDer1 is a string +Der/..., preceded by an unsuitable symbol or string, 
# expressed here as a negation of the suitable one

define BadDer1 [
    [~[?* [["+N"] | ["+Num" "+Card"] | ["+N" "+Prop"]]] "+Der/lik"] |
    [~[?* "+N" "+Prop"] "+Der/lane"] |
    [~[?* [["+N"] | ["+Num" "+Card"]]] "+Der/line"] |
    [~[?* [["+A"] | ["+A" "+Comp"] | ["+A" "+Superl"]]] "+Der/lt"] |
    [~[?* "+A"] "+Der/sti"] |
    [~[?* "+A" "+Comp"] "+Der/ini"] |
    [~[?* "+A"] "+Der/m"] |
    [~[?* "+A"] "+Der/im"] |
    [~[?* j a "+N"] "+Der/nna"] |
    [~[?* [["+N"] | ["+Num" "+Card"]]] "+Der/kond"] |
    [~[?* [["+A"] | ["+A" "+Comp"] | ["+A" "+Superl"] | 
          [ ZZ {tama} "+V"] | [ ZZ {dama} "+V"] | [ {hooldama} "+V"] | [ {tsema} "+V"] | [ ? ? ? {lema} "+V"]]] "+Der/us"] |
    [~[?* [{uma} | {tellima}] "+V"] "+Der/mus"] |             # devalveeruma - devalveerumus
    [~[?* {eerima} "+V"] "+Der/ng"] |           # devalveerima - devalveering
    [~[?* {ism} "+N"] "+Der/ist"] |             # kapitalism - kapitalist
    [~[?* ? ? ? ? "+N"]  "+Der/ti"] |           # should we eliminate pee+N+Der/ti ?
    [~[?* [["+N" ("+Prop")] | ["+Num" "+Card"] | ["+A"] | ["+A" "+Comp"] | ["+A" "+Superl"]]] "+Dim/ke"] 
    ] ;

# stem shortening "suffix"
#define BadDer5 [~[?+ "+A"] "+Der/sti" ];
#define BadDer5 [~[?+ "+Der/mine" "+N"] "+Der/minus" ];

define BadDer5 [   
    ~[?* [["+Der/mine" "+N"] |       # mis-
          [Vow Cons* {mine} "+N"] |  # min 2 syll; mis-
          ["+Der/line" "+A"] |       # lis-
          [Vow Cons* {line} "+A"] |  # min 2 syll; lis-
          [Vow Cons* {line} "+N"] |  # min 2 syll; lis-
          ["+Der/lane" "+N"] |       # las-
          [Vow Cons* {lane} "+N"] |  # min 2 syll; las-
          [Vow Cons* [Vow [Vow | Cons]+ Cons {ne}] "+A"]  # min 2 syll; ...iil-, ...akt-
         ]
      ] "+Der/minus"
   ] ;

# re-applying a similar suffix is not allowed
define BadDer2 [
    [["+Der/lik" | "+Der/line"] ?* ["+Der/lik" | "+Der/line"]] |
    [  ["+Der/m" | "+Der/im"]   ?*   ["+Der/m" | "+Der/im"]  ] |
    [ ["+Der/us" | "+Der/mus"]  ?*  ["+Der/us" | "+Der/mus"] ] 
    ] ;

# some suffix sequences are actually bad
define BadDer3 [
    [[ "+Der/nu" | "+Der/us" | "+Der/lane" ] "+N" "+Der/ti"] 
    ] ;

# some words are not suitable for certain suffixes 
# although their word class, inflectional type and stem ending would suggest otherwise;
# in other words, BadDer4 adds exceptions to BadDer1

define BadDer4 [
    [{valmis} "+A" "+Der/us"] | 
    [{audio} "+A" "+Der/us"] | 
    [{väeti} "+A" "+Der/us"] | 
    [{kirju} "+A" "+Der/us"] | 
    [{ja} "+A" "+Der/us"] | 
    [{jas} "+A" "+Der/us"] | 
    [{ke} "+A" "+Der/us"] | 
    [{nud} "+A" "+Der/us"] | 
    [{aitama} "+V" "+Der/us"] |
    [{arg} "+A" "+Der/m"] |
    [{hahk} "+A" "+Der/m"] |
    [{halb} "+A" "+Der/m"] |
    [{harv} "+A" "+Der/m"] |
    [{hea} "+A" "+Der/m"] |
    [{hell} "+A" "+Der/m"] |
    [{julm} "+A" "+Der/m"] |
    [{jäik} "+A" "+Der/m"] |
    [{kaua} "+A" "+Der/m"] |
    [{kehv} "+A" "+Der/m"] |
    [{kelp} "+A" "+Der/m"] |
    [{koer} "+A" "+Der/m"] |
    [{kuiv} "+A" "+Der/m"] |
    [{kuri} "+A" "+Der/m"] |
    [{kurb} "+A" "+Der/m"] |
    [{kuum} "+A" "+Der/m"] |
    [{kõhn} "+A" "+Der/m"] |
    [{kõva} "+A" "+Der/m"] |
    [{külm} "+A" "+Der/m"] |
    [{lahja} "+A" "+Der/m"] |
    [{lai} "+A" "+Der/m"] |
    [{lõtv} "+A" "+Der/m"] |
    [{must} "+A" "+Der/m"] |
    [{märg} "+A" "+Der/m"] |
    [{nõder} "+A" "+Der/m"] |
    [{nõrk} "+A" "+Der/m"] |
    [{närb} "+A" "+Der/m"] |
    [{paha} "+A" "+Der/m"] |
    [{pikk} "+A" "+Der/m"] |
    [{ramb} "+A" "+Der/m"] |
    [{ränk} "+A" "+Der/m"] |
    [{sitt} "+A" "+Der/m"] |
    [{soe} "+A" "+Der/m"] |
    [{sünk} "+A" "+Der/m"] |
    [{tark} "+A" "+Der/m"] |
    [{tuim} "+A" "+Der/m"] |
    [{tumm} "+A" "+Der/m"] |
    [{turd} "+A" "+Der/m"] |
    [{turb} "+A" "+Der/m"] |
    [{tühi} "+A" "+Der/m"] |
    [{vana} "+A" "+Der/m"] |
    [{vara} "+A" "+Der/m"] |
    [{õrn} "+A" "+Der/m"] |
    [Vow {ke} "+A" "+Der/im"] |   # rohke+im is OK, peenike+im not OK
    [{hea} "+A" "+Der/im"] |
    [{asi} "+N" "+Der/lik"]   # asilik is bad; asjalik is in the lexicon already
    ] ;

# some words with certain suffixes make bad components in compounds  
# in other words, BadDer6 adds more exceptions to BadDer1

define BadDer6 [
    [{ahi} "+N" "+Der/lik"] | # k_ahju+lik
    [{imu} "+N" "+Der/lik"] | # imu+lik
    [{hoog} "+N" "+Der/lik"] | # _hoo+lik
    [{kee} "+N" "+Der/lik"] | # keelik
    [{voog} "+N" "+Der/lik"] | # voo+lik
    [{suss} "+N" "+Der/lik"] | # _sus+lik
    [{tuss} "+N" "+Der/lik"] | # _tus+lik
    [{uss} "+N" "+Der/lik"] | # _us+lik
    [{ema} "+N" "+Der/line"] | # te_ema+line
    [{kubu} "+N" "+Der/line"] | # koolist
    [{ott} "+N" "+Der/line"] | # psühho_oti+line
    [{udu} "+N" "+Der/line"]   # ru_udu+line
    ] ;


regex ~[ BadDer1 ?* ] & ~[ BadDer5 ?* ] & ~[ ?* BadDer2 ?* ] & ~[ ?* BadDer3 ?* ] & ~[ ?* BadDer4 ?* ] & ~[ BadDer6 ?* ];

